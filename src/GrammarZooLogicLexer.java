// Generated from F:/Faculdade/Matï¿½rias/5 periodo/Compiladores/ZooLogic/src/GrammarZooLogic.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class GrammarZooLogicLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, MAIN=3, FUNC=4, IF=5, ELSE=6, ELIF=7, RET=8, FOR=9, WHILE=10, 
		TIPO=11, AP=12, FP=13, AC=14, FC=15, ASP=16, PV=17, COMEN=18, ESC=19, 
		LER=20, STRING=21, VAR=22, NUM=23, OP_ARIT=24, OP_REL=25, OP_COND=26, 
		OP_ATR=27, OP_CONCAT=28, WS=29, ErrorChar=30;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "MAIN", "FUNC", "IF", "ELSE", "ELIF", "RET", "FOR", "WHILE", 
			"TIPO", "AP", "FP", "AC", "FC", "ASP", "PV", "COMEN", "ESC", "LER", "STRING", 
			"VAR", "NUM", "DIGITO", "LETRA", "OP_ARIT", "OP_REL", "OP_COND", "OP_ATR", 
			"OP_CONCAT", "WS", "ErrorChar"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'()'", "','", "'selva'", "'arvore'", "'cobra'", "'cauda'", "'caudaCobra'", 
			"'desmatamento'", "'formiga'", "'baleia'", null, "'('", "')'", "'{'", 
			"'}'", "'\"'", "';'", "'//'", "'lhama'", "'porco'", null, null, null, 
			null, null, null, "'='", "'++'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, "MAIN", "FUNC", "IF", "ELSE", "ELIF", "RET", "FOR", 
			"WHILE", "TIPO", "AP", "FP", "AC", "FC", "ASP", "PV", "COMEN", "ESC", 
			"LER", "STRING", "VAR", "NUM", "OP_ARIT", "OP_REL", "OP_COND", "OP_ATR", 
			"OP_CONCAT", "WS", "ErrorChar"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public GrammarZooLogicLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "GrammarZooLogic.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001e\u00ff\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0003"+
		"\n\u009e\b\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0005\u0014\u00bf\b\u0014\n\u0014\f\u0014\u00c2\t\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0005\u0015\u00c9\b\u0015"+
		"\n\u0015\f\u0015\u00cc\t\u0015\u0001\u0016\u0004\u0016\u00cf\b\u0016\u000b"+
		"\u0016\f\u0016\u00d0\u0001\u0016\u0001\u0016\u0004\u0016\u00d5\b\u0016"+
		"\u000b\u0016\f\u0016\u00d6\u0003\u0016\u00d9\b\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001"+
		"\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001a\u0001\u001a\u0003\u001a\u00ea\b\u001a\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0003\u001b\u00f0\b\u001b\u0001\u001c\u0001\u001c\u0001"+
		"\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0004\u001e\u00f8\b\u001e\u000b"+
		"\u001e\f\u001e\u00f9\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0000"+
		"\u0000 \u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b"+
		"\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b"+
		"\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016"+
		"-\u0017/\u00001\u00003\u00185\u00197\u001a9\u001b;\u001c=\u001d?\u001e"+
		"\u0001\u0000\u0006\u0003\u0000\n\n\r\r\"\"\u0001\u000009\u0002\u0000A"+
		"Zaz\u0004\u0000%%*+--//\u0002\u0000<<>>\u0003\u0000\t\n\r\r  \u010d\u0000"+
		"\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000"+
		"\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000"+
		"\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r"+
		"\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u00003"+
		"\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000"+
		"\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000"+
		"\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0001A"+
		"\u0001\u0000\u0000\u0000\u0003D\u0001\u0000\u0000\u0000\u0005F\u0001\u0000"+
		"\u0000\u0000\u0007L\u0001\u0000\u0000\u0000\tS\u0001\u0000\u0000\u0000"+
		"\u000bY\u0001\u0000\u0000\u0000\r_\u0001\u0000\u0000\u0000\u000fj\u0001"+
		"\u0000\u0000\u0000\u0011w\u0001\u0000\u0000\u0000\u0013\u007f\u0001\u0000"+
		"\u0000\u0000\u0015\u009d\u0001\u0000\u0000\u0000\u0017\u009f\u0001\u0000"+
		"\u0000\u0000\u0019\u00a1\u0001\u0000\u0000\u0000\u001b\u00a3\u0001\u0000"+
		"\u0000\u0000\u001d\u00a5\u0001\u0000\u0000\u0000\u001f\u00a7\u0001\u0000"+
		"\u0000\u0000!\u00a9\u0001\u0000\u0000\u0000#\u00ab\u0001\u0000\u0000\u0000"+
		"%\u00ae\u0001\u0000\u0000\u0000\'\u00b4\u0001\u0000\u0000\u0000)\u00ba"+
		"\u0001\u0000\u0000\u0000+\u00c5\u0001\u0000\u0000\u0000-\u00ce\u0001\u0000"+
		"\u0000\u0000/\u00da\u0001\u0000\u0000\u00001\u00dc\u0001\u0000\u0000\u0000"+
		"3\u00de\u0001\u0000\u0000\u00005\u00e9\u0001\u0000\u0000\u00007\u00ef"+
		"\u0001\u0000\u0000\u00009\u00f1\u0001\u0000\u0000\u0000;\u00f3\u0001\u0000"+
		"\u0000\u0000=\u00f7\u0001\u0000\u0000\u0000?\u00fd\u0001\u0000\u0000\u0000"+
		"AB\u0005(\u0000\u0000BC\u0005)\u0000\u0000C\u0002\u0001\u0000\u0000\u0000"+
		"DE\u0005,\u0000\u0000E\u0004\u0001\u0000\u0000\u0000FG\u0005s\u0000\u0000"+
		"GH\u0005e\u0000\u0000HI\u0005l\u0000\u0000IJ\u0005v\u0000\u0000JK\u0005"+
		"a\u0000\u0000K\u0006\u0001\u0000\u0000\u0000LM\u0005a\u0000\u0000MN\u0005"+
		"r\u0000\u0000NO\u0005v\u0000\u0000OP\u0005o\u0000\u0000PQ\u0005r\u0000"+
		"\u0000QR\u0005e\u0000\u0000R\b\u0001\u0000\u0000\u0000ST\u0005c\u0000"+
		"\u0000TU\u0005o\u0000\u0000UV\u0005b\u0000\u0000VW\u0005r\u0000\u0000"+
		"WX\u0005a\u0000\u0000X\n\u0001\u0000\u0000\u0000YZ\u0005c\u0000\u0000"+
		"Z[\u0005a\u0000\u0000[\\\u0005u\u0000\u0000\\]\u0005d\u0000\u0000]^\u0005"+
		"a\u0000\u0000^\f\u0001\u0000\u0000\u0000_`\u0005c\u0000\u0000`a\u0005"+
		"a\u0000\u0000ab\u0005u\u0000\u0000bc\u0005d\u0000\u0000cd\u0005a\u0000"+
		"\u0000de\u0005C\u0000\u0000ef\u0005o\u0000\u0000fg\u0005b\u0000\u0000"+
		"gh\u0005r\u0000\u0000hi\u0005a\u0000\u0000i\u000e\u0001\u0000\u0000\u0000"+
		"jk\u0005d\u0000\u0000kl\u0005e\u0000\u0000lm\u0005s\u0000\u0000mn\u0005"+
		"m\u0000\u0000no\u0005a\u0000\u0000op\u0005t\u0000\u0000pq\u0005a\u0000"+
		"\u0000qr\u0005m\u0000\u0000rs\u0005e\u0000\u0000st\u0005n\u0000\u0000"+
		"tu\u0005t\u0000\u0000uv\u0005o\u0000\u0000v\u0010\u0001\u0000\u0000\u0000"+
		"wx\u0005f\u0000\u0000xy\u0005o\u0000\u0000yz\u0005r\u0000\u0000z{\u0005"+
		"m\u0000\u0000{|\u0005i\u0000\u0000|}\u0005g\u0000\u0000}~\u0005a\u0000"+
		"\u0000~\u0012\u0001\u0000\u0000\u0000\u007f\u0080\u0005b\u0000\u0000\u0080"+
		"\u0081\u0005a\u0000\u0000\u0081\u0082\u0005l\u0000\u0000\u0082\u0083\u0005"+
		"e\u0000\u0000\u0083\u0084\u0005i\u0000\u0000\u0084\u0085\u0005a\u0000"+
		"\u0000\u0085\u0014\u0001\u0000\u0000\u0000\u0086\u0087\u0005i\u0000\u0000"+
		"\u0087\u0088\u0005n\u0000\u0000\u0088\u0089\u0005d\u0000\u0000\u0089\u008a"+
		"\u0005i\u0000\u0000\u008a\u009e\u0005o\u0000\u0000\u008b\u008c\u0005p"+
		"\u0000\u0000\u008c\u008d\u0005a\u0000\u0000\u008d\u008e\u0005t\u0000\u0000"+
		"\u008e\u009e\u0005o\u0000\u0000\u008f\u0090\u0005b\u0000\u0000\u0090\u0091"+
		"\u0005o\u0000\u0000\u0091\u009e\u0005i\u0000\u0000\u0092\u0093\u0005p"+
		"\u0000\u0000\u0093\u009e\u0005e\u0000\u0000\u0094\u0095\u0005c\u0000\u0000"+
		"\u0095\u0096\u0005e\u0000\u0000\u0096\u0097\u0005n\u0000\u0000\u0097\u0098"+
		"\u0005t\u0000\u0000\u0098\u0099\u0005o\u0000\u0000\u0099\u009a\u0005p"+
		"\u0000\u0000\u009a\u009b\u0005e\u0000\u0000\u009b\u009c\u0005i\u0000\u0000"+
		"\u009c\u009e\u0005a\u0000\u0000\u009d\u0086\u0001\u0000\u0000\u0000\u009d"+
		"\u008b\u0001\u0000\u0000\u0000\u009d\u008f\u0001\u0000\u0000\u0000\u009d"+
		"\u0092\u0001\u0000\u0000\u0000\u009d\u0094\u0001\u0000\u0000\u0000\u009e"+
		"\u0016\u0001\u0000\u0000\u0000\u009f\u00a0\u0005(\u0000\u0000\u00a0\u0018"+
		"\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005)\u0000\u0000\u00a2\u001a\u0001"+
		"\u0000\u0000\u0000\u00a3\u00a4\u0005{\u0000\u0000\u00a4\u001c\u0001\u0000"+
		"\u0000\u0000\u00a5\u00a6\u0005}\u0000\u0000\u00a6\u001e\u0001\u0000\u0000"+
		"\u0000\u00a7\u00a8\u0005\"\u0000\u0000\u00a8 \u0001\u0000\u0000\u0000"+
		"\u00a9\u00aa\u0005;\u0000\u0000\u00aa\"\u0001\u0000\u0000\u0000\u00ab"+
		"\u00ac\u0005/\u0000\u0000\u00ac\u00ad\u0005/\u0000\u0000\u00ad$\u0001"+
		"\u0000\u0000\u0000\u00ae\u00af\u0005l\u0000\u0000\u00af\u00b0\u0005h\u0000"+
		"\u0000\u00b0\u00b1\u0005a\u0000\u0000\u00b1\u00b2\u0005m\u0000\u0000\u00b2"+
		"\u00b3\u0005a\u0000\u0000\u00b3&\u0001\u0000\u0000\u0000\u00b4\u00b5\u0005"+
		"p\u0000\u0000\u00b5\u00b6\u0005o\u0000\u0000\u00b6\u00b7\u0005r\u0000"+
		"\u0000\u00b7\u00b8\u0005c\u0000\u0000\u00b8\u00b9\u0005o\u0000\u0000\u00b9"+
		"(\u0001\u0000\u0000\u0000\u00ba\u00c0\u0003\u001f\u000f\u0000\u00bb\u00bf"+
		"\b\u0000\u0000\u0000\u00bc\u00bd\u0005\\\u0000\u0000\u00bd\u00bf\t\u0000"+
		"\u0000\u0000\u00be\u00bb\u0001\u0000\u0000\u0000\u00be\u00bc\u0001\u0000"+
		"\u0000\u0000\u00bf\u00c2\u0001\u0000\u0000\u0000\u00c0\u00be\u0001\u0000"+
		"\u0000\u0000\u00c0\u00c1\u0001\u0000\u0000\u0000\u00c1\u00c3\u0001\u0000"+
		"\u0000\u0000\u00c2\u00c0\u0001\u0000\u0000\u0000\u00c3\u00c4\u0003\u001f"+
		"\u000f\u0000\u00c4*\u0001\u0000\u0000\u0000\u00c5\u00ca\u00031\u0018\u0000"+
		"\u00c6\u00c9\u0003/\u0017\u0000\u00c7\u00c9\u00031\u0018\u0000\u00c8\u00c6"+
		"\u0001\u0000\u0000\u0000\u00c8\u00c7\u0001\u0000\u0000\u0000\u00c9\u00cc"+
		"\u0001\u0000\u0000\u0000\u00ca\u00c8\u0001\u0000\u0000\u0000\u00ca\u00cb"+
		"\u0001\u0000\u0000\u0000\u00cb,\u0001\u0000\u0000\u0000\u00cc\u00ca\u0001"+
		"\u0000\u0000\u0000\u00cd\u00cf\u0003/\u0017\u0000\u00ce\u00cd\u0001\u0000"+
		"\u0000\u0000\u00cf\u00d0\u0001\u0000\u0000\u0000\u00d0\u00ce\u0001\u0000"+
		"\u0000\u0000\u00d0\u00d1\u0001\u0000\u0000\u0000\u00d1\u00d8\u0001\u0000"+
		"\u0000\u0000\u00d2\u00d4\u0005.\u0000\u0000\u00d3\u00d5\u0003/\u0017\u0000"+
		"\u00d4\u00d3\u0001\u0000\u0000\u0000\u00d5\u00d6\u0001\u0000\u0000\u0000"+
		"\u00d6\u00d4\u0001\u0000\u0000\u0000\u00d6\u00d7\u0001\u0000\u0000\u0000"+
		"\u00d7\u00d9\u0001\u0000\u0000\u0000\u00d8\u00d2\u0001\u0000\u0000\u0000"+
		"\u00d8\u00d9\u0001\u0000\u0000\u0000\u00d9.\u0001\u0000\u0000\u0000\u00da"+
		"\u00db\u0007\u0001\u0000\u0000\u00db0\u0001\u0000\u0000\u0000\u00dc\u00dd"+
		"\u0007\u0002\u0000\u0000\u00dd2\u0001\u0000\u0000\u0000\u00de\u00df\u0007"+
		"\u0003\u0000\u0000\u00df4\u0001\u0000\u0000\u0000\u00e0\u00ea\u0007\u0004"+
		"\u0000\u0000\u00e1\u00e2\u0005>\u0000\u0000\u00e2\u00ea\u0005=\u0000\u0000"+
		"\u00e3\u00e4\u0005<\u0000\u0000\u00e4\u00ea\u0005=\u0000\u0000\u00e5\u00e6"+
		"\u0005=\u0000\u0000\u00e6\u00ea\u0005=\u0000\u0000\u00e7\u00e8\u0005!"+
		"\u0000\u0000\u00e8\u00ea\u0005=\u0000\u0000\u00e9\u00e0\u0001\u0000\u0000"+
		"\u0000\u00e9\u00e1\u0001\u0000\u0000\u0000\u00e9\u00e3\u0001\u0000\u0000"+
		"\u0000\u00e9\u00e5\u0001\u0000\u0000\u0000\u00e9\u00e7\u0001\u0000\u0000"+
		"\u0000\u00ea6\u0001\u0000\u0000\u0000\u00eb\u00ec\u0005&\u0000\u0000\u00ec"+
		"\u00f0\u0005&\u0000\u0000\u00ed\u00ee\u0005|\u0000\u0000\u00ee\u00f0\u0005"+
		"|\u0000\u0000\u00ef\u00eb\u0001\u0000\u0000\u0000\u00ef\u00ed\u0001\u0000"+
		"\u0000\u0000\u00f08\u0001\u0000\u0000\u0000\u00f1\u00f2\u0005=\u0000\u0000"+
		"\u00f2:\u0001\u0000\u0000\u0000\u00f3\u00f4\u0005+\u0000\u0000\u00f4\u00f5"+
		"\u0005+\u0000\u0000\u00f5<\u0001\u0000\u0000\u0000\u00f6\u00f8\u0007\u0005"+
		"\u0000\u0000\u00f7\u00f6\u0001\u0000\u0000\u0000\u00f8\u00f9\u0001\u0000"+
		"\u0000\u0000\u00f9\u00f7\u0001\u0000\u0000\u0000\u00f9\u00fa\u0001\u0000"+
		"\u0000\u0000\u00fa\u00fb\u0001\u0000\u0000\u0000\u00fb\u00fc\u0006\u001e"+
		"\u0000\u0000\u00fc>\u0001\u0000\u0000\u0000\u00fd\u00fe\t\u0000\u0000"+
		"\u0000\u00fe@\u0001\u0000\u0000\u0000\f\u0000\u009d\u00be\u00c0\u00c8"+
		"\u00ca\u00d0\u00d6\u00d8\u00e9\u00ef\u00f9\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}